plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev.legacyforge'
}

repositories {
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url = "https://jm.gserv.me/repository/maven-public/"
    }
    maven {
        name = "Curios"
        url = uri("https://maven.theillusivec4.top/")
    }
}

mixin {
    add(sourceSets.main, "${mod_id}.refmap.json")

    config("${mod_id}.mixins.json")
    config("${mod_id}.forge.mixins.json")
    config("${mod_id}.compat.mixins.json")
    config("${mod_id}.client.mixins.json")
}

legacyForge {
    version = "${minecraft_version}-${forge_version}"


    validateAccessTransformers = true

    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers = ["src/main/resources/META-INF/accesstransformer.cfg"]
    }

    runs {
        client {
            client()
        }
        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }

    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    compileOnly project(":common")
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
    implementation 'org.jetbrains:annotations:24.0.1'

    // MixinExtras
    testCompileOnly(compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1")))
    jarJar(implementation("io.github.llamalad7:mixinextras-forge:0.4.1")) {
        version {
            strictly '[0.4.1,)'
        }
    }

    // mods
    compileOnly("maven.modrinth:travelersbackpack:${travelersbackpack_forge}")
    compileOnly("maven.modrinth:sophisticated-backpacks:PvHr7Rsf")
    compileOnly("maven.modrinth:ryoamiclights:c2Th4NIB")

    compileOnly("top.theillusivec4.curios:curios-forge:${curios_version}")

    //lib
    implementation("com.electronwill.night-config:toml:3.6.0")
    jarJar(implementation "mysticdrew:common-networking-forge:${common_networking}")
}

jar {
    finalizedBy('reobfJar')
    manifest.attributes([
            "MixinConfigs": "${mod_id}.mixins.json,${mod_id}.forge.mixins.json"
    ])
}

tasks.withType(Javadoc).configureEach { enabled = false }
