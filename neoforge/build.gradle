plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

repositories {
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url = "https://jm.gserv.me/repository/maven-public/"
    }
    maven {
        name = "Curios"
        url = uri("https://maven.theillusivec4.top/")
    }
}

dependencies {
    //implementation("com.moulberry:mixinconstraints:1.0.1")

    // mods
    compileOnly("maven.modrinth:travelersbackpack:${travelersbackpack_neoforge}")
    compileOnly("maven.modrinth:sophisticated-backpacks:Z6CXO9sQ")
    compileOnly("maven.modrinth:ryoamiclights:tApwsw9C")

    compileOnly("top.theillusivec4.curios:curios-neoforge:${curios_version}")

    //lib
    implementation("com.electronwill.night-config:toml:3.6.0")
    jarJar(implementation "mysticdrew:common-networking-neoforge:${common_networking}")

}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.withType(Javadoc).configureEach { enabled = false }
